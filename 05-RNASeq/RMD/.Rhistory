source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
suppressPackageStartupMessages(library(DESeq2))
counts <- read.table("../data/pnas_expression.txt",header = T)
row.names(counts) <- counts$ensembl_ID
counts <- as.matrix(counts[,-c(1,ncol(counts))])
counts <- counts[rowSums(counts) != 0,]
coldata <- data.frame(condition=c(rep("C",4), rep("T",3)))
row.names(coldata) <- colnames(counts)
coldata <- as.matrix(coldata)
dds <- DESeqDataSetFromMatrix(countData = counts, colData = coldata, design = ~ condition)
suppressPackageStartupMessages(library(DESeq2))
counts <- read.table("../data/pnas_expression.txt",header = T)
counts <- read.table("../data/pnas_expression.txt",header = T)
row.names(counts) <- counts$ensembl_ID
counts <- as.matrix(counts[,-c(1,ncol(counts))])
counts <- as.matrix(counts[,-c(1,ncol(counts))])
counts <- counts[rowSums(counts) != 0,]
coldata <- data.frame(condition=c(rep("C",4), rep("T",3)))
row.names(coldata) <- colnames(counts)
suppressPackageStartupMessages(library(DESeq2))
suppressPackageStartupMessages(library(DESeq2))
counts <- read.table("../data/pnas_expression.txt",header = T)
row.names(counts) <- counts$ensembl_ID
counts <- as.matrix(counts[,-c(1,ncol(counts))])
counts <- counts[rowSums(counts) != 0,]
coldata <- data.frame(condition=c(rep("C",4), rep("T",3)))
row.names(coldata) <- colnames(counts)
dds <- DESeqDataSetFromMatrix(countData = counts, colData = coldata, design = ~ condition)
dds <- estimateSizeFactors(dds)
dds
sizeFactors(dds)
results
results<- results[order(results$padj),]
head(counts(dds, normalized=T))
dds <- DESeq(dds)
results <- results(dds)
results
results<- results[order(results$padj),]
results
plotMA(results)
d <- read.table("../data/pnas_expression.txt",header=T)
rownames(d) <- d$ensembl_ID
d <- d[,-c(1,9)]
d <- d+1
log.d <- log(d)
log.d.t <- t(log.d)
d.pca <- prcomp(log.d.t)
plot(d.pca,type="l")
summary(d.pca)
d.pca$sdev^2
plot(d.pca$x[,1],d.pca$x[,2],col=as.factor(coldata), main="PCA",xlab="PC1",ylab="PCA2")
d.pca$x
d.pca$x[,1]
d.pca$x[,2]
type(d.pca$x[,2])
str(d.pca$x[,2])
class(d.pca$x[,2])
class(d.pca$x[,2])
plot(d.pca$x[,1], d.pca$x[,2],col=as.factor(coldata), main="PCA",xlab="PC1",ylab="PCA2")
plot(d.pca$x[,1],d.pca$x[,2])
as.factor(coldata)
coldata <- data.frame(condition=c(rep("C",4), rep("T",3)))
as.factor(coldata)
coldata
coldata$condition
plot(d.pca$x[,1], d.pca$x[,2],col=coldata$condition, main="PCA",xlab="PC1",ylab="PCA2")
?phyper
