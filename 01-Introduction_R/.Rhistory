wt<-read.xls("kasturi_wt.xlsx",header=T)
t1<- wt$Mean.Intensity.Ch2.T1
t2<-wt$Mean.Intensity.Ch2.T2
pixels<-wt$Number.Pixels
t1_area<-pixels * t1
t2_area<- pixels * t2
t1_row_3 <- t1[seq(3, length(t1),3)]
t2_row_3 <- t2[seq(3, length(t2),3)]
t1_row_1 <- t1[seq(1,length(t1),3)]
t2_row_2 <- t2[seq(2,length(t2),3)]
t1_row_2 <- t1[seq(2,length(t1),3)]
t2_row_1 <- t2[seq(1,length(t2),3)]
total_t1 <- t1_row_1 + t1_row_2 + t1_row_3
total_t2 <- t2_row_1 + t2_row_2 + t2_row_3
par(mfrow=c(1,2))
plot(t1_row_3,t1_row_1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3, t2_row_2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1~t1_row_3)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2~t2_row_3)
abline(l_t2,col="red")
plot(t1_row_3/total_t1,t1_row_1/total_t1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3/total_t2, t2_row_2/total_t2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1/total_t1~t1_row_3/total_t1)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2/total_t2~t2_row_3/total_t2)
abline(l_t2,col="red")
summary(l_t1)
summary(l_t2)
head(total_t1)
library(gdata)
wt<-read.xls("kasturi_wt.xlsx",header=T)
t1<- wt$Mean.Intensity.Ch2.T1
t2<-wt$Mean.Intensity.Ch2.T2
pixels<-wt$Number.Pixels
t1_area<-pixels * t1
t2_area<- pixels * t2
t1_row_3 <- t1_area[seq(3, length(t1_area),3)]
t2_row_3 <- t2_area[seq(3, length(t2_area),3)]
t1_row_1 <- t1_area[seq(1,length(t1_area),3)]
t2_row_2 <- t2_area[seq(2,length(t2_area),3)]
t1_row_2 <- t1_area[seq(2,length(t1_area),3)]
t2_row_1 <- t2_area[seq(1,length(t2_area),3)]
total_t1 <- t1_row_1 + t1_row_2 + t1_row_3
total_t2 <- t2_row_1 + t2_row_2 + t2_row_3
par(mfrow=c(1,2))
plot(t1_row_3,t1_row_1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3, t2_row_2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1~t1_row_3)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2~t2_row_3)
abline(l_t2,col="red")
plot(t1_row_3/total_t1,t1_row_1/total_t1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3/total_t2, t2_row_2/total_t2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1/total_t1~t1_row_3/total_t1)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2/total_t2~t2_row_3/total_t2)
abline(l_t2,col="red")
summary(l_t1)
summary(l_t2)
library(gdata)
wt<-read.xls("kasturi_wt.xlsx",header=T)
t1<- wt$Mean.Intensity.Ch2.T1
t2<-wt$Mean.Intensity.Ch2.T2
pixels<-wt$Number.Pixels
t1_area<-pixels * t1
t2_area<- pixels * t2
t1_row_3 <- t1_area[seq(3, length(t1_area),3)]
t2_row_3 <- t2_area[seq(3, length(t2_area),3)]
t1_row_1 <- t1_area[seq(1,length(t1_area),3)]
t2_row_2 <- t2_area[seq(2,length(t2_area),3)]
t1_row_2 <- t1_area[seq(2,length(t1_area),3)]
t2_row_1 <- t2_area[seq(1,length(t2_area),3)]
total_t1 <- t1_row_1 + t1_row_2 + t1_row_3
total_t2 <- t2_row_1 + t2_row_2 + t2_row_3
par(mfrow=c(1,2))
plot(t1_row_3,t1_row_1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3, t2_row_2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1~t1_row_3)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2~t2_row_3)
abline(l_t2,col="red")
plot(t1_row_3/total_t1,t1_row_1/total_t1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3/total_t2, t2_row_2/total_t2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1/total_t1~t1_row_3/total_t1)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2/total_t2~t2_row_3/total_t2)
abline(l_t2,col="red")
summary(l_t1)
summary(l_t2)
library(gdata)
wt<-read.xls("kasturi_wt.xlsx",header=T)
t1<- wt$Mean.Intensity.Ch2.T1
t2<-wt$Mean.Intensity.Ch2.T2
pixels<-wt$Number.Pixels
t1_area<-pixels * t1
t2_area<- pixels * t2
t1_row_3 <- t1_area[seq(3, length(t1_area),3)]
t2_row_3 <- t2_area[seq(3, length(t2_area),3)]
t1_row_1 <- t1_area[seq(1,length(t1_area),3)]
t2_row_2 <- t2_area[seq(2,length(t2_area),3)]
t1_row_2 <- t1_area[seq(2,length(t1_area),3)]
t2_row_1 <- t2_area[seq(1,length(t2_area),3)]
total_t1 <- t1_row_1 + t1_row_2 + t1_row_3
total_t2 <- t2_row_1 + t2_row_2 + t2_row_3
#par(mfrow=c(1,2))
plot(t1_row_3,t1_row_1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
points(t2_row_3, t2_row_2,col="red")
legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
l_t1 <- lm(t1_row_1~t1_row_3)
abline(l_t1,col="blue")
l_t2 <- lm(t2_row_2~t2_row_3)
abline(l_t2,col="red")
# plot(t1_row_3/total_t1,t1_row_1/total_t1,xlab="Mito",ylab="Multiplied data",col="blue",main="Multiplied data")
# points(t2_row_3/total_t2, t2_row_2/total_t2,col="red")
# legend("topleft",c("t1_row_3 vs t1_row_1","t2_row_3 vs t2_row_2"),pch=c(20,20),col=c("blue","red"))
# l_t1 <- lm(t1_row_1/total_t1~t1_row_3/total_t1)
# abline(l_t1,col="blue")
# l_t2 <- lm(t2_row_2/total_t2~t2_row_3/total_t2)
# abline(l_t2,col="red")
summary(l_t1)
summary(l_t2)
Sys.which("bash")
```{r engine="bash"}
library(formatR)
tidy_source
tidy_source()
library(knitr)
library(knitr)
?knit2pdf
library(Biostrings)
showMethods(complement)
library(Biostrings)
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
showMethods(complement)
getClass(biostrings)
getClass(Biostrings)
getClass("Biostrings")
library(Bistrings)
library(Biostrings)
getClass(Biostrings)
getClass(clsterApply)
getClass(clusterApply)
library(GenomicRanges)
biocLite(GenomicRanges)
biocLite("GenomicRanges")
library(GenomicRanges)
getClass(GenomicRanges)
getClass("GRanges")
library(BSgenome.Dmelanogaster.UCSC.dm3)
Dmelanogaster
biocLite(BSgenome.Dmelanogaster.UCSC.dm3)
library(BSgenome.Dmelanogaster.UCSC.dm3)
Dmelanogaster
biocLite("BSgenome.Dmelanogaster.UCSC.dm3")
library(BSgenome.Dmelanogaster.UCSC.dm3)
Dmelanogaster
install.packages("SequenceAnalysisData")
biocLite("SequenceAnalysisData")
source("http://bioconductor.org/scratch-repos/pkgInstall.R")
pkgInstall("IntermediateSequenceAnalysis2013")
?pkgInstall
install.packages("~/Downloads/SequenceAnalysisData_0.1.4.tar.gz",repos=NULL,type="source")
biocLite("GenomicFeatures")
biocLite("edgeR")
install.packages("~/Downloads/SequenceAnalysisData_0.1.4.tar.gz",repos=NULL,type="source")
biocLite("BSgenome.Dmelanogaster.UCSC.dm3")
library(BSgenome.Dmelanogaster.UCSC.dm3)
Dmelanogaster
library(SequenceAnalysisData)
getClass(SequenceAnalysisData)
data(ex)
ex
ex[1]
?Views
nm<-"chr3L"
chr<-Dmelanogaster[[nm]]
ex[[1]]
start(ex[[1]])
v<-Views(chr,start=start(ex[[1]]), end=end(ex[[1]]))
v
?alphabetFrequency
getClass(v)
class(v)
showMethods(v)
showMethods(XStringViews)
showMethods(Views)
alphabetFrequency(v)
getClass(BioStrings)
getClass(BioString)
getClass(Biostrings)
getClass("Biostrings")
?getClass
?Biostrings
library(Biostrings)
getClass(Biostrings)
getClass("Biostrings")
ls(BioStrings)
?BioStrings
Biostrings
?Biostrings
ls(Biostrings)
ls("Biostrings")
??Biostrings
getClass(DNAStringSet)
getClass("DNAStringSet")
ls("Biostrings")
ls("DNAStringSet")
ls(Biostrings:DNAStringSet)
showMethods("DNAStringSet")
showMethods(class="DNAStringSet")
showClass(Biostrings)
showClass("Biostrings")
show("Biostrings")
ls(package:Biostrings)
help(package="Biostrings")
library(Biostrings)
library(Biostrings)
faa<-readFASTA("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa",format="fasta")
faa<-readAAStringSet(url("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa",format="fasta"))
faa<-readAAStringSet(url("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa"),format="fasta")
faa<-readAAStringSet(getURL("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa"),format="fasta")
download.file("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
download.file("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa",destfile="test.faa")
?download.file
download.file("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa",destfile="test.faa")
faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa",format="fasta")
faa
len(faa)
length(faa)
faa$width
faa[[width]]
faa[["width"]]
str(faa)
faa$ranges$width
faa$ranges
names(faa)
length(faa)
width(faa)
width(faa)/length(faa)
sum(width(faa))/length(faa)
hist(width(faa))
hist(width(faa),breaks=10)
?hist
hist(width(faa),breaks=100)
abline(316,col="red")
?abline
abline(v=316, col="red")
median(width(faa))
abline(v=282, col="red")
abline(v=282, col="blue")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
?biocLite
library(biobase)
library(Biobase)
?Biobase
source("http://bioconductor.org/biocLite.R")
biocLite("Biostrings")
faa<-readFASTA("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
library("Biostrings")
faa<-readFASTA("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
help(package="Biostrings")
vignette(Biostrings)
vignette("Biostrings")
vignette(package="Biostrings")
help(package="Biostrings")
help("Biostrings")
vignette(Biostring2Classes)
vignette(Biostring2Classes, package="Biostrings")
vignette("Biostring2Classes", package="Biostrings")
browseVignettes(package="Biostrings")
browseVignettes(package="Biostrings")
browseVignettes("Biostrings")
faa<-readBStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_ uid57779/NC_000913.faa")
faa<-readBStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa")
faa
class(faa)
names(faa)
library(formatR)
tidy.source(url<-"ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa", width.cutoff = 80)
#tidy.source(faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa"))
library(formatR)
tidy_source(url<-"ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa", width.cutoff = 80)
#tidy.source(faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa"))
?tidy_source
library(formatR)
tidy_source("url<-\"ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa\"", width.cutoff = 80)
#tidy.source(faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa"))
library(formatR)
tidy_source(text="url<-\"ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa\"", width.cutoff = 80)
#tidy.source(faa<-readAAStringSet("ftp://ftp.ncbi.nlm.nih.gov/genomes/Bacteria/Escherichia_coli_K_12_substr__MG1655_uid57779/NC_000913.faa"))
suppressPackageStartupMessages(library("Biostrings"))
?tidy_source
install.packages("RColorBrewer")
help(package="base")
help(plot)
help.search(plot)
help.search("plot")
.libPaths()
?arrows
t<- rnorm(1000)
plot(t)
hist(t)
mids(hist)
h<-hist(t)
mids(h)
h$mids
lines(h$mids)
points(h$mids)
h
points(h$mids,h$counts)
lines(h$mids,h$counts)
smooth.spline(h$mids,h$counts)
?smooth.spline
s<-smooth.spline(h$mids,h$counts)
plot(s)
lines(s)
plot()
plot(h$mids,h$counts, type="n")
lines(s)
??smooth
l<-loess(h$counts~h$mids)
lines(predict(lo),lwd=2,col='red')
lines(predict(l),lwd=2,col='red')
plot(h$mids,h$counts)
l
predict(l)
lines(predict(l))
smooth.spline(h$mids,h$counts)
s<-smooth.spline(h$mids,h$counts)
lines(s)
s<-smooth.spline(h$mids,h$counts,spar = 0.3)
lines(s)
s<-smooth.spline(h$mids,h$counts,spar = 0.5)
lines(s)
lines(h$mids,predict(l,h$mids))
plot(h$mids,h$counts, type="n")
lines(h$mids,predict(l,h$mids))
?smooth.spline
help(package="Iranges")
help(package="IRanges")
?lambda
?rep
rep(2,4)
?rpois
import.gff
?import.gff
library(GenomicRanges)
?import.gff
?import.gff()
library(rtacklayer)
library(rtracklayer)
?import.gff
import.gff(genome="hg19")
help(package="gdata")
install.packages(gdata)
install.packages("gdata")
help(package="gdata")
library(gdata)
read.xlx
read.xls
system("wget ftp://ftp.arabidopsis.org/home/tair/Genes/TAIR10_genome_release/TAIR10_gff3/TAIR10_GFF3_genes.gff")
library(Homo.sapiens)
source("http://bioconductor.org/biocLite.R")
biocLite("packagename")
biocLite("Homo.sapiens")
help(package="Homo.sapiens")
library(Homo.sapiens)
Homo.sapiens
cols(Homo.sapiens)
biocLite("OrganismDbi")
library(AnnotationDbi)
cols(Homo.sapiens)
library(OrgamismDbi)
library(OrganismmDbi)
library(OrganismDbi)
cols(Homo.sapiens)
help(pacakge="OrganismDbi")
help(package="OrganismDbi")
browseVignettes(OrganismDbi)
browseVignettes("OrganismDbi")
columns(Homo.sapiens)
keys(Homo.sapiens)
keytype(Homo.sapiens)
keytypes(Homo.sapiens)
keys(Homo.sapiens,keytypes="SYMBOL")
keys(Homo.sapiens,keytype="SYMBOL")
grep("TP53", keys(Homo.sapiens,keytype="SYMBOL"))
gene_names <- keys(Homo.sapiens, keytype="SYMBOL")
p53 <- grep ("TP53", gene_names)
gene_names[p53]
columns(Homo.sapiens)
select(Homo.sapiens,keys=gene_names[p53],columns=c("CHR","TXNAME","ENTREZID","CHRLOC"), keytype="SYMBOL")
select(Homo.sapiens,keys=gene_names[p53],columns=c("CHR","TXNAME","ENTREZID","CHRLOC"), keytype="SYMBOL")
select(Homo.sapiens,keys=gene_names[p53],columns=c("CHR","TXNAME","ENTREZID","CHRLOC","CHRLOCEND"), keytype="SYMBOL")
p53 <- grep ("^TP53$", gene_names)
select(Homo.sapiens,keys=gene_names[p53],columns=c("CHR","TXNAME","ENTREZID","CHRLOC","CHRLOCEND"), keytype="SYMBOL")
select(Homo.sapiens,keys=gene_names[p53],columns=c("CHR","TXNAME","ENTREZID","CHRLOC","CHRLOCEND"), keytype="SYMBOL")
transcriptsBy(Homo.sapiens, by="gene", columns=c("TXNAME","SYMBOL")
)
tran<-transcriptsBy(Homo.sapiens, by="gene", columns=c("TXNAME","SYMBOL"))
tran
str(tran)
data(mtcars)
ls
mtcars
mtcars$gears
mtcars$gear
mtcars$cylinder
mtcars$cyl
table(mtcars$gear)
barplot(mtcars$gear)
barplot(table(mtcars$gear))
barplot(table(mtcars$gear,mtcars$cyl))
barplot(table(mtcars$gear,mtcars$cyl),beside = T)
table(mtcars$gear,mtcars$cyl)
counts<-table(mtcars$gear,mtcars$cyl)
attributes(counts)
class(counts)
as.vector(counts)
bp<-barplot(counts)
bp<-barplot(counts,beside=T)
bp
as.vector(bp)
source('~/.active-rstudio-document', echo=TRUE)
te(c(1,2,3))
te(c(1,2,3),err=c(0.5,0.5,0.5))
source('~/.active-rstudio-document', echo=TRUE)
te(c(1,2,3),err=c(0.5,0.5,0.5))
counts
err_m <- table(rep(0.5,9),nrow=3,ncol=3)
err_m <- matrix(rep(0.5,9),nrow=3,ncol=3)
err_m
te(counts)
te(counts,err=err_m)
?gl
gl(2,8,lables=c("control",'treat'))
gl(2,8,labels=c("control",'treat'))
?tapply
?apply
??apply
install.packages("ISLR")
library(ISLR)
ls()
head(hitters)
head(Hitters)
?fix
fix(Hitters)
dim(Hitters)
sum(is.na(Hitters$Salary))
Hitters<-na.omit(Hitters)
dim(Hitters)
sum(is.na(Hitters))
library(leaps)
package.install(leaps)
packages.install(leaps)
install.packages(leaps)
install.packages("leaps")
library(leaps)
regfit.full=regsubsets(Salary~., Hitters)
sumarry(reregfit.full)
sumarry(regfit.full)
sumary(regfit.full)
summary(regfit.full)
setwd("/Volumes/homes/p/syncancer/doc")
?heatmap
?heatmap.2
??heatmap.2
n <- readRDS("20160127-NMF_rank_2.rds")
n <- readRDS("20160127-NMF_rank_2.rds")
n <- readRDS("20160127-NMF_rank_2.rds")
n <- readRDS("20160127-NMF_rank_2.rds")
install.packages("devtools")
devtools::install_github("rstudio/bookdown")
install.packages("tufte")
library(WGCNA)
install.packages(fastcluster)
install.packages("fastcluster")
library(WGCNA)
install.packages("WGCNA")
library(WGCNA)
version
s1 <- c(1000,2000, 500, 10000000)
s2 <- c(500, 1000, 250, 10)
fpkm1 <- s1 / (sum(s1)/10^6)
fpkm1
s1 <- c(1000,2000, 500, 10000000)
sum(s1)
fpkm2 <- s2/ (sum(s2)/10^6)
fpkm2
fpkm2 <- s2/ (sum(s2)/10^6))
1000/12
tpm1 <- fpkm1/ sum(fpkm1)
tpm2 <- fpkm2/sum(fpkm2)
tpm1
tpm1 <- tpm1 * 10^6
tpm2 <- tpm2 * 10^6
tpm1
tpm2
setwd("~/m/fab/CB2-101-Biocomp-2017.git/02-Introduction_to_R")
